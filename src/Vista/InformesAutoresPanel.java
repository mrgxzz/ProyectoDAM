/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;


import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Manu Romeo
 */
public class InformesAutoresPanel extends javax.swing.JPanel {

    /**
     * Creates new form MoviesBoardPanel
     */
    public InformesAutoresPanel() {
        initComponents();
/*
        ArrayList<Actor> listaActores = Controller.DBControllerMovies.getActorsList();
        txtVerActores.setText("");

        for (Actor actor : listaActores) {
            txtVerActores.append(actor.toString() + "\n");
            cmbActor.addItem(actor);
        }

        traduccion();
*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        txtVerActores = new javax.swing.JTextArea();
        VerInformeActores = new javax.swing.JButton();
        VerInformePeliculasActor = new javax.swing.JButton();
        lblGenero = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(518, 491));

        txtVerActores.setColumns(20);
        txtVerActores.setRows(5);
        jScrollPane2.setViewportView(txtVerActores);

        VerInformeActores.setBackground(new java.awt.Color(0, 102, 204));
        VerInformeActores.setForeground(new java.awt.Color(255, 255, 255));
        VerInformeActores.setText("Ver informe de actores");
        VerInformeActores.setBorderPainted(false);
        VerInformeActores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerInformeActoresActionPerformed(evt);
            }
        });

        VerInformePeliculasActor.setBackground(new java.awt.Color(0, 102, 204));
        VerInformePeliculasActor.setForeground(new java.awt.Color(255, 255, 255));
        VerInformePeliculasActor.setText("Ver informe de peliculas por actor");
        VerInformePeliculasActor.setBorderPainted(false);
        VerInformePeliculasActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerInformePeliculasActorActionPerformed(evt);
            }
        });

        lblGenero.setText("Actor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VerInformeActores, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VerInformePeliculasActor, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblGenero)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(VerInformeActores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VerInformePeliculasActor)
                    .addComponent(lblGenero))
                .addContainerGap(180, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void VerInformeActoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerInformeActoresActionPerformed
     /*   try {                                                  
            File informeFile = new File(this.getClass().getResource("/Informes/InformeActores.jrxml").getFile());
            System.out.println(informeFile.getCanonicalPath());
            try {
                
                Statement st = Controller.DBConnector.getConexion().createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM peliculas.actor");
                
                JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);
                
                JasperReport report = JasperCompileManager.compileReport(informeFile.toString());
                
                JasperPrint visor = JasperFillManager.fillReport(report, null, dataSource);
                
                JasperViewer.viewReport(visor, false);
                
            } catch (SQLException | JRException e) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error en la generación del informe.");
            }
            
        } catch (IOException ex) {
            Logger.getLogger(InformesAutoresPanel.class.getName()).log(Level.SEVERE,null, ex);
        }
*/
    }//GEN-LAST:event_VerInformeActoresActionPerformed

    private void VerInformePeliculasActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerInformePeliculasActorActionPerformed
      /*  String informe = "./src/Informes/InformePeliculasActor.jrxml";

        try {
            Actor actor = (Actor) cmbActor.getSelectedItem();

            PreparedStatement st = Controller.DBConnector.getConexion().prepareStatement("SELECT DISTINCT pelicula.* FROM pelicula INNER JOIN pelicula_actor\n"
                    + "	ON pelicula_actor.idPelicula = pelicula.idPelicula\n"
                    + "	WHERE pelicula_actor.idActor =  ? ");
            st.setInt(1, actor.getIdActor());

            ResultSet rs = st.executeQuery();

            JRResultSetDataSource dataSource = new JRResultSetDataSource(rs);

            HashMap<String, Object> parametros = new HashMap<>();
            parametros.put("ID_ACTOR", actor.getIdActor());

            JasperReport report = JasperCompileManager.compileReport(informe);

            JasperPrint visor = JasperFillManager.fillReport(report, parametros, dataSource);

            JasperViewer.viewReport(visor, false);

        } catch (SQLException | JRException e) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en la generación del informe.");
        }*/

    }//GEN-LAST:event_VerInformePeliculasActorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton VerInformeActores;
    private javax.swing.JButton VerInformePeliculasActor;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JTextArea txtVerActores;
    // End of variables declaration//GEN-END:variables

    private void traduccion() {

        ResourceBundle rb = ResourceBundle.getBundle("Idiomas.idioma");

        activarTraduccion(rb);

    }

    private void activarTraduccion(ResourceBundle rb) {

        VerInformeActores.setText(rb.getString("VerInformeActores"));
        VerInformePeliculasActor.setText(rb.getString("VerInformePeliculasActor"));

    }
}
